{"version":3,"sources":["pages/Basic.js","pages/Contact.js","components/Headline.js","components/Image.js","components/Paragraph.js","magnolia.config.js","components/Expander.js","components/List.js","components/Item.js","helpers/AppHelpers.js","helpers/PageLoader.js","components/Navigation.js","App.js","index.js"],"names":["Basic","props","main","extras","title","className","metadata","content","Contact","style","background","padding","Headline","text","Image","src","process","image","alt","Paragraph","dangerouslySetInnerHTML","__html","richText","config","state","isCollapsed","toggle","bind","event","this","setState","preventDefault","EditorContextHelper","refresh","expanderItems","onClick","focusable","viewBox","aria-hidden","role","d","parentTemplateId","React","Component","items","getAPIBase","Boolean","getLanguages","split","removeCurrentLanguage","string","currentLanguage","replace","RegExp","getCurrentLanguage","languages","i","length","language","test","window","location","pathname","getRouterBasename","indexOf","nodeName","getVersion","path","URLSearchParams","get","PageLoader","getPagePath","loadPage","a","apiBase","pagePath","console","log","version","href","fullContentPath","fetch","pageResponse","json","pageJson","templateId","templateJson","inEditor","templateResponse","init","templateDefinitions","inPreview","renderLanguages","map","lang","key","data-active","newLanguage","origin","search","changeLanguage","Navigation","useState","navItems","setNavItems","useEffect","url","response","data","fetchNav","item","activeClassName","to","navigationTitle","App","basename","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18941e0f.chunk.js","sourcesContent":["import React from 'react';\nimport { EditableArea } from '@magnolia/react-editor';\n\nconst Basic = props => {\n  const { main, extras, title } = props;\n\n  return (\n    <div className=\"Basic\">\n      <div className=\"hint\">[Basic Page]</div>\n      <h1>{title || props.metadata['@name']}</h1>\n\n      <main>\n        <div className=\"hint\">[Main Area]</div>         \n        {main && <EditableArea className=\"Area\" content={main} />}  \n      </main>\n\n      <div className=\"Extras\" >\n        <div className=\"hint\">[Sercondary Area]</div>\n        {extras && <EditableArea className=\"Area\" content={extras} />}  \n        {/* <button>Contact</button> */}\n      </div>    \n    </div>\n  ) \n};\n\nexport default Basic;\n","import React from 'react';\nimport { EditableArea } from '@magnolia/react-editor';\n\nconst Contact = props => {\n  const { main, title } = props;\n  const boxStyle = {\n    background: '#eaf7f5',\n    padding: '20px'\n  };\n\n  return (\n    <div className=\"Contact\">\n      <h2  className=\"hint\">[Contact Page]</h2>\n      <div className=\"box\" style={boxStyle}>\n        <h1>{title || 'Nulla vitae elit libero, a pharetra augue.'}</h1>\n      </div>\n      {main && <EditableArea content={main} />}\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\n\nconst Headline = props => \n\n<h2 className=\"Headline\">{props.text}</h2>;\n\nexport default Headline;\n","import React from 'react';\n\nconst Image = props => \n    \n<img className=\"Image\" src={process.env.REACT_APP_MGNL_DAM_RAW + props.image['@link']} alt=\"Etiam Purus\" />\n\n\nexport default Image;\n","import React from 'react';\n\nconst Paragraph = props => <p className=\"Paragraph\" dangerouslySetInnerHTML={{ __html: props.richText }} />;\n\nexport default Paragraph;\n","import Basic from './pages/Basic';\nimport Contact from './pages/Contact';\nimport Headline from './components/Headline';\nimport Image from './components/Image';\nimport Paragraph from './components/Paragraph';\nimport Expander from './components/Expander';\nimport List from './components/List';\nimport Item from './components/Item';\n\nconst config = {\n    'componentMappings':{\n        'react-minimal-lm:pages/basic': Basic,\n        'react-minimal-lm:pages/contact': Contact,\n    \n        'spa-lm:components/headline': Headline,\n        'spa-lm:components/image': Image,\n        'spa-lm:components/paragraph': Paragraph,\n        'spa-lm:components/expander': Expander,\n        'spa-lm:components/list': List,\n        'spa-lm:components/listItem': Item\n    }\n};\n\nexport default config;\n","import React from 'react';\nimport { EditableArea, EditorContextHelper } from '@magnolia/react-editor';\n\nclass Expander extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {isCollapsed: true};\n    this.toggle = this.toggle.bind(this);\n  }\n\n  state = {};\n \n  toggle(event) {\n    this.setState({\n      isCollapsed: !this.state.isCollapsed\n    });\n    event.preventDefault();\n  }\n\n  componentDidUpdate() {\n    EditorContextHelper.refresh();\n    // if (window.parent.mgnlRefresh !== undefined){\n    //   EditorContextHelper.refresh();\n    // }\n  }\n\n  render () {\n    const expanderItems = this.props.expanderItems;\n    return (\n      <div className=\"expander\">\n        <div onClick={this.toggle} className={this.state.isCollapsed ? 'open expanderHeader' : 'closed expanderHeader'}>\n          Expander\n          <svg className=\"expanderIcon\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\"><path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path></svg>\n        </div>\n        \n        {!this.state.isCollapsed &&\n          <div>\n            <div className=\"hint\">[EXPANDER OPENED]</div>\n            {expanderItems && <EditableArea content={expanderItems}  parentTemplateId={this.props.metadata['mgnl:template']}/>}\n          </div>\n        }   \n      </div>\n    );\n  }\n  \n\n};\n\nexport default Expander;\n","import React from 'react';\nimport { EditableArea } from '@magnolia/react-editor';\n\nconst List = props => {\n\n  const { items} = props;\n\n  return (\n    <>\n    <div className=\"hint\">[LIST]</div>\n    <ul className=\"List\">\n      {items && <EditableArea content={items} parentTemplateId={props.metadata['mgnl:template']}/>}\n    </ul>\n    </>\n\n  );\n};\n\nexport default List;\n","import React from 'react';\n\nconst Item = props => <li className=\"Item\">{props.text}</li>;\n\nexport default Item;\n","export function getAPIBase() {\n  let M;\n  if (Boolean(process.env.REACT_APP_MGNL_IS_PREVIEW)) {\n    M = process.env.REACT_APP_MGNL_BASE_AUTHOR;\n  } else {\n    M = process.env.REACT_APP_MGNL_BASE_PUBLIC;\n  }\n  let API_BASE = process.env.REACT_APP_MGNL_HOST + M;\n  return API_BASE;\n}\n\nexport function getLanguages() {\n  return process.env.REACT_APP_MGNL_LANGUAGES.split(' ');\n}\n\nexport function removeCurrentLanguage(string, currentLanguage) {\n  return string.replace(new RegExp('/' + currentLanguage + '($|/)'), '/');\n}\n\nexport function getCurrentLanguage() {\n  const languages = getLanguages();\n\n  for (let i = 0; i < languages.length; i++) {\n    const language = languages[i];\n\n    if (new RegExp('/' + language + '($|/)').test(window.location.pathname)) {\n      return language;\n    }\n  }\n\n  return languages[0];\n}\n\nexport function changeLanguage(newLanguage) {\n  const nodeName = process.env.REACT_APP_MGNL_APP_BASE;\n  const languages = getLanguages();\n  let pathname = window.location.pathname;\n  const currentLanguage = getCurrentLanguage();\n  pathname = removeCurrentLanguage(pathname, currentLanguage);\n\n  if (languages[0] !== newLanguage) {\n    if (pathname.indexOf(nodeName) > -1) {\n      pathname = pathname.replace(new RegExp(nodeName), '/' + newLanguage + nodeName);\n    } else {\n      pathname = '/' + newLanguage + pathname;\n    }\n  }\n\n  window.location.href = window.location.origin + pathname + window.location.search;\n}\n\nexport function getRouterBasename() {\n  const nodeName = process.env.REACT_APP_MGNL_APP_BASE;\n  const languages = getLanguages();\n  var pathname = window.location.pathname;\n\n  if (pathname.indexOf(nodeName) > -1) {\n    return pathname.replace(new RegExp(nodeName + '.*'), '') + nodeName;\n  }\n\n  const currentLanguage = getCurrentLanguage();\n\n  return languages[0] === currentLanguage ? '/' : '/' + currentLanguage;\n}\n\nexport function getVersion(path) {\n  return new URLSearchParams(path).get('mgnlVersion');\n}\n","import React from 'react';\nimport config from '../magnolia.config';\nimport { getAPIBase, getLanguages, removeCurrentLanguage, getCurrentLanguage, getVersion } from './AppHelpers';\n\nimport { EditablePage } from '@magnolia/react-editor';\nimport { EditorContextHelper } from '@magnolia/react-editor';\n\nclass PageLoader extends React.Component {\n  state = {};\n\n  getPagePath = () => {\n    const languages = getLanguages();\n    const nodeName = process.env.REACT_APP_MGNL_APP_BASE;\n    const currentLanguage = getCurrentLanguage();\n    let path = nodeName + window.location.pathname.replace(new RegExp('(.*' + nodeName + '|.html)', 'g'), '');\n\n    if (currentLanguage !== languages[0]) {\n      path = removeCurrentLanguage(path, currentLanguage);\n      path += '?lang=' + currentLanguage;\n    }\n\n    return path;\n  };\n\n  loadPage = async () => {\n    // Bail out if already loaded content.\n    if (this.state.pathname === window.location.pathname) return;\n\n    const apiBase = getAPIBase();\n\n    const pagePath = this.getPagePath();\n    console.log('pagePath:' + pagePath);\n\n    const version = getVersion(window.location.href);\n    let fullContentPath = `${apiBase}${version ? process.env.REACT_APP_MGNL_API_PAGES_PREVIEW : process.env.REACT_APP_MGNL_API_PAGES}${pagePath}${version ? `?version=${version}` : ''}`;\n\n    const pageResponse = await fetch(fullContentPath);\n    const pageJson = await pageResponse.json();\n    console.log('page content: ', pageJson);\n\n    const templateId = pageJson['mgnl:template'];\n    console.log('templateId:', templateId);\n\n    let templateJson = null;\n    if (EditorContextHelper.inEditor()) {\n      const templateResponse = await fetch(apiBase + process.env.REACT_APP_MGNL_API_TEMPLATES + '/' + templateId);\n      templateJson = await templateResponse.json();\n      console.log('definition:', templateJson);\n    }\n\n    this.setState({\n      init: true,\n      content: pageJson,\n      templateDefinitions: templateJson,\n      pathname: window.location.pathname,\n    });\n  };\n\n  inEditorPreview() {\n    const url = window.location.href;\n    const inPreview = url.indexOf('mgnlPreview=true') > 0;\n    console.log('inEditorPreview:' + inPreview);\n    return EditorContextHelper.inEditor() && inPreview;\n  }\n\n  componentDidMount() {\n    this.loadPage();\n  }\n\n  componentDidUpdate() {\n    this.loadPage();\n  }\n\n  render() {\n    if (this.state.init) {\n      console.log('config:', config);\n      //const isDevMode = process.env.NODE_ENV === 'development';\n      //console.log(\"n:\" + process.env.NODE_ENV)\n\n      return (\n        <EditablePage\n          templateDefinitions={this.state.templateDefinitions || {}}\n          content={this.state.content}\n          config={config}\n        ></EditablePage>\n      );\n    } else {\n      return <p>NO PAGE.</p>;\n    }\n  }\n}\n\nexport default PageLoader;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getAPIBase, getLanguages, getCurrentLanguage, changeLanguage } from '../helpers/AppHelpers';\n\nfunction renderLanguages() {\n  const currentLanguage = getCurrentLanguage();\n\n  return (\n    <div className=\"languages\">\n      {getLanguages().map((lang) => (\n        <span key={`lang-${lang}`} data-active={currentLanguage === lang} onClick={() => changeLanguage(lang)}>\n          {lang}\n        </span>\n      ))}\n    </div>\n  );\n}\n\nfunction Navigation() {\n  const [navItems, setNavItems] = React.useState([]);\n\n  React.useEffect(() => {\n    async function fetchNav() {\n      const apiBase = getAPIBase();\n      const url = apiBase + process.env.REACT_APP_MGNL_API_NAV + process.env.REACT_APP_MGNL_APP_BASE;\n      console.log('NAV URL:' + url);\n      const response = await fetch(url);\n      const data = await response.json();\n      let items = data['@nodes'].map((nodeName) => {\n        return data[nodeName];\n      });\n      setNavItems([data, ...items]);\n    }\n\n    if (navItems.length < 1) {\n      fetchNav();\n    }\n  }, [navItems]);\n\n  return navItems ? (\n    <nav className=\"Navigation\">\n      {navItems.map((item) => {\n        return (\n          <NavLink\n            activeClassName=\"active\"\n            key={item['@id']}\n            to={item['@path'].replace(process.env.REACT_APP_MGNL_APP_BASE, '')}\n          >\n            {item.navigationTitle || item.title || item['@name']}\n          </NavLink>\n        );\n      })}\n      {renderLanguages()}\n    </nav>\n  ) : (\n    <div />\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport PageLoader from './helpers/PageLoader';\nimport Navigation from './components/Navigation';\nimport './App.css';\nimport { getRouterBasename } from './helpers/AppHelpers';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={getRouterBasename()}>\n      <header>\n        <Navigation />\n      </header>\n\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" component={PageLoader} />\n        </Switch>\n      </div>\n\n      <footer>\n        Integer posuere erat a ante venenatis dapibus posuere velit aliquet.\n        <br />\n        Copyright © 2020\n      </footer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}